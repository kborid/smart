apply plugin: 'com.android.application'
apply from: "../sign.gradle"

android {
    compileSdkVersion mCompileSdkVersion

    defaultConfig {
        applicationId mApplicationId
        minSdkVersion mMinSdkVersion
        targetSdkVersion mTargetSdkVersion
        versionCode A1versionCode as int
        versionName A1versionName
        applicationIdSuffix = A1Suffix

        buildConfigField "String", "tt", tt

        //多dex文件支持
        multiDexEnabled true

        resConfigs('zh-rCN')
        ndk {
            abiFilters('armeabi', 'armeabi-v7a')
        }
//
//        splits{
//            // Configures multiple APKs based on ABI.
//            abi {
//                // Enables building multiple APKs per ABI.
//                enable true
//
//                // By default all ABIs are included, so use reset() and include to specify that we only
//                // want APKs for x86, armeabi-v7a, and mips.
//                reset()
//
//                // Specifies a list of ABIs that Gradle should create APKs for.
//                include "armeabi", "armeabi-v7a", "arm64-v8a"
//
//                // Specifies that we want to also generate a universal APK that includes all ABIs.
//                universalApk true
//            }
//        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
        }
    }

    flavorDimensions("env")
    productFlavors {
        pro {
            dimension "env"
            resValue "integer", "x", "1";
        }

        tst {
            dimension "env"
            resValue "integer", "x", "2";
        }

        dev {
            dimension "env"
            resValue "integer", "x", "0";
        }
    }

    productFlavors.all { flavor ->
        manifestPlaceholders.put("CHANNEL_VALUE", name)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def abiName = getFilter(com.android.build.OutputFile.ABI)
//            def flavorName = ""
//            variant.productFlavors.each { product ->
//                flavorName = product.name //获取渠道名字
//            }
//            变量名字
//            variant.versionName //eg:1.1.1
//            variant.versionCode //eg:1
//            variant.buildType.name //eg:debug/release
//            variant.name //flavorBuildTypeName eg:devRelease
//            flavorName //eg:dev
            def buildFlag = ("release".equalsIgnoreCase(variant.buildType.name)) ? "_r" : "_d"
            outputFileName = 'Smart' + "-v${variant.versionName}_${flavorName}_build${variant.versionCode}${buildFlag}.apk"
//            outputFileName = 'Smart-' + "${variant.name}-${variant.versionName}.apk"
        }
    }

//    dexOptions {
//        preDexLibraries false
//    }

//      效果等同于通过implementation引用libs目录
//    repositories {
//        flatDir {
//            dirs 'libs'
//        }
//    }
}

dependencies {
    //可以包含多种格式lib包
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation project(':library')

    //glide
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    //ButterKnife
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    //SmartRefreshLayout
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'

    //fragmentation
    implementation 'me.yokeyword:fragmentation:0.10.3'

    //icon
    implementation 'com.mikepenz:iconics-core:3.0.3@aar'
    implementation 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar'
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.4@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.0.6.0@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.4@aar'
    implementation 'com.mikepenz:meteocons-typeface:1.1.0.4@aar'
    implementation 'com.mikepenz:community-material-typeface:2.0.46.1@aar'
    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.4@aar'
    implementation 'com.mikepenz:typeicons-typeface:2.0.7.4@aar'
    implementation 'com.mikepenz:entypo-typeface:1.0.0.4@aar'
    implementation 'com.mikepenz:devicon-typeface:2.0.0.4@aar'
    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.4@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.4@aar'
    implementation 'com.mikepenz:pixeden-7-stroke-typeface:1.2.0.2@aar'

    //dragger2
    implementation 'com.google.dagger:dagger:2.14.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.14.1'

    //stetho 调试工具
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'me.imid.swipebacklayout.lib:library:1.1.0'
//    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.uphyca:stetho_realm:2.1.0'

    //bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.1'

    //图片缩放
    implementation 'com.commit451:PhotoView:1.2.4'

    //视频播放
    implementation 'fm.jiecao:jiecaovideoplayer:5.5.2'

    //动态权限
    implementation("com.github.hotchemi:permissionsdispatcher:$rootProject.permissionDispatcherVersion")
    annotationProcessor "com.github.hotchemi:permissionsdispatcher-processor:$rootProject.permissionDispatcherVersion"

    // okdownloader
    implementation 'com.liulishuo.okdownload:okdownload:1.0.5' //核心库
    implementation 'com.liulishuo.okdownload:sqlite:1.0.5' //存储断点信息的数据库
    implementation 'com.liulishuo.okdownload:okhttp:1.0.5' //提供okhttp连接，如果使用的话，需要引入okhttp网络请求库
}
